# Generated by Django 4.2.5 on 2023-10-06 01:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUsers',
            fields=[
                ('instance_id', models.UUIDField(blank=True, null=True)),
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('aud', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('encrypted_password', models.CharField(blank=True, max_length=255, null=True)),
                ('email_confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('invited_at', models.DateTimeField(blank=True, null=True)),
                ('confirmation_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('confirmation_sent_at', models.DateTimeField(blank=True, null=True)),
                ('recovery_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('recovery_sent_at', models.DateTimeField(blank=True, null=True)),
                ('email_change_token_new', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('email_change', models.CharField(blank=True, max_length=255, null=True)),
                ('email_change_sent_at', models.DateTimeField(blank=True, null=True)),
                ('last_sign_in_at', models.DateTimeField(blank=True, null=True)),
                ('raw_app_meta_data', models.JSONField(blank=True, null=True)),
                ('raw_user_meta_data', models.JSONField(blank=True, null=True)),
                ('is_super_admin', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True, unique=True)),
                ('phone_confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('phone_change', models.TextField(blank=True, null=True)),
                ('phone_change_token', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_change_sent_at', models.DateTimeField(blank=True, null=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('email_change_token_current', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('email_change_confirm_status', models.SmallIntegerField(blank=True, null=True)),
                ('banned_until', models.DateTimeField(blank=True, null=True)),
                ('reauthentication_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('reauthentication_sent_at', models.DateTimeField(blank=True, null=True)),
                ('is_sso_user', models.BooleanField(db_comment='Auth: Set this column to true when the account comes from SSO. These accounts can have duplicate emails.')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': '"auth"."users"',
                'db_table_comment': 'Auth: Stores user login data within a secure schema.',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Associations',
            fields=[
                ('association_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(verbose_name=255)),
                ('url_homepage', models.CharField(verbose_name=255)),
                ('main_focus', models.TextField(blank=True, null=True)),
                ('logo_url', models.CharField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'associations',
            },
        ),
        migrations.CreateModel(
            name='Candidates',
            fields=[
                ('candidate_id', models.AutoField(primary_key=True, serialize=False)),
                ('supabase_authenticaiton_uuid', models.UUIDField()),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('preferred_name', models.CharField(blank=True, max_length=255, null=True)),
                ('values_text', models.TextField(blank=True, db_comment='Values is what is important to me, what I would like to see in the company I work for', null=True)),
                ('related_experience', models.TextField(blank=True, null=True)),
                ('desired_job', models.CharField(blank=True, max_length=255, null=True)),
                ('personality_description', models.TextField(blank=True, null=True)),
                ('street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('house_number', models.CharField(blank=True, max_length=20, null=True)),
                ('postal_code', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number_region', models.IntegerField(blank=True, null=True)),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('email_adress', models.CharField(max_length=255)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('notice_period_months', models.IntegerField(blank=True, null=True)),
                ('file_cv', models.FileField(blank=True, null=True, upload_to='cvs/')),
                ('preferred_work_id', models.IntegerField(blank=True, null=True)),
                ('accepted_privacy', models.BooleanField()),
                ('skip_tutorial', models.BooleanField(default=False)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'candidates',
            },
        ),
        migrations.CreateModel(
            name='Cantons',
            fields=[
                ('canton_id', models.AutoField(primary_key=True, serialize=False)),
                ('canton_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'cantons',
            },
        ),
        migrations.CreateModel(
            name='Companies',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False)),
                ('values', models.TextField(blank=True, db_comment='Values is what is important to the company', null=True)),
                ('main_contact_first_name', models.CharField()),
                ('main_contact_last_name', models.CharField()),
                ('main_contact_email', models.CharField()),
                ('main_contact_region_code', models.IntegerField(blank=True, null=True)),
                ('main_contact_phone_number', models.IntegerField(blank=True, null=True)),
                ('linkedin_url', models.CharField(blank=True, null=True)),
                ('logo_url', models.CharField(blank=True, null=True)),
                ('accepted_privacy', models.BooleanField(blank=True, null=True)),
                ('skip_tutorial', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('invited_by', models.ForeignKey(db_column='invited_by', db_comment='association id', on_delete=django.db.models.deletion.DO_NOTHING, to='api.associations')),
            ],
            options={
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('contry_id', models.AutoField(primary_key=True, serialize=False)),
                ('country_name_in_english', models.CharField(max_length=255)),
                ('country_name_in_native_language', models.CharField(max_length=255)),
                ('country_it_code', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('job_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_id', models.IntegerField()),
                ('job_description', models.TextField()),
                ('open', models.BooleanField()),
                ('role_id', models.IntegerField()),
                ('last_day_to_apply', models.DateField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'jobs',
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('language_id', models.AutoField(primary_key=True, serialize=False)),
                ('language_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'languages',
            },
        ),
        migrations.CreateModel(
            name='LanguagesProficiency',
            fields=[
                ('language_proficiency_id', models.AutoField(primary_key=True, serialize=False)),
                ('language_proficiency_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'languages_proficiency',
            },
        ),
        migrations.CreateModel(
            name='ListValues',
            fields=[
                ('list_values_id', models.AutoField(primary_key=True, serialize=False)),
                ('list_values_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'list_values',
            },
        ),
        migrations.CreateModel(
            name='PageCounts',
            fields=[
                ('page_count_id', models.AutoField(primary_key=True, serialize=False)),
                ('page_name', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('views', models.IntegerField()),
            ],
            options={
                'db_table': 'page_counts',
                'db_table_comment': 'Stores the daily page counts statistics',
            },
        ),
        migrations.CreateModel(
            name='Personalities',
            fields=[
                ('personality_id', models.AutoField(primary_key=True, serialize=False)),
                ('personality_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'personalities',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.ImageField(upload_to='avatars')),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('skill_id', models.AutoField(primary_key=True, serialize=False)),
                ('skill_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'skills',
            },
        ),
        migrations.CreateModel(
            name='SoftSkills',
            fields=[
                ('soft_skill_id', models.AutoField(primary_key=True, serialize=False)),
                ('soft_skill_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'soft_skills',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_descrption', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'status',
            },
        ),
        migrations.CreateModel(
            name='WorkModels',
            fields=[
                ('preferred_work_model_id', models.AutoField(primary_key=True, serialize=False)),
                ('preferred_work_model_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'work_models',
            },
        ),
        migrations.CreateModel(
            name='WorkPermits',
            fields=[
                ('work_permit_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_work_permit', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'work_permits',
            },
        ),
        migrations.CreateModel(
            name='ValuesCandidates',
            fields=[
                ('list_values_id', models.AutoField(primary_key=True, serialize=False)),
                ('cadidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.candidates')),
                ('list_values_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.listvalues')),
            ],
            options={
                'db_table': 'values_candidates',
            },
        ),
        migrations.CreateModel(
            name='Subsidiaries',
            fields=[
                ('subsidiary_id', models.AutoField(primary_key=True, serialize=False)),
                ('subsidiary_name', models.CharField()),
                ('street_address', models.CharField()),
                ('house_number', models.CharField()),
                ('postal_code', models.IntegerField()),
                ('city', models.CharField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.companies')),
            ],
            options={
                'db_table': 'subsidiaries',
            },
        ),
        migrations.CreateModel(
            name='SelectedCandidates',
            fields=[
                ('selection_id', models.AutoField(primary_key=True, serialize=False)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.candidates')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.jobs')),
            ],
            options={
                'db_table': 'selected_candidates',
            },
        ),
        migrations.CreateModel(
            name='SearchAlert',
            fields=[
                ('search_alert_id', models.AutoField(primary_key=True, serialize=False)),
                ('search_alert_parameters', models.TextField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.companies')),
            ],
            options={
                'db_table': 'search_alert',
                'db_table_comment': 'Placeholder',
            },
        ),
        migrations.CreateModel(
            name='PersonalityCandidates',
            fields=[
                ('personality_candidates_id', models.AutoField(primary_key=True, serialize=False)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.candidates')),
                ('personality', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.personalities')),
            ],
            options={
                'db_table': 'personality_candidates',
            },
        ),
        migrations.AddField(
            model_name='jobs',
            name='subsidiary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.subsidiaries'),
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('invitation_id', models.AutoField(primary_key=True, serialize=False)),
                ('validation_string', models.CharField(db_comment='String that validates if the invitation is valid')),
                ('company_invite', models.BooleanField(blank=True, db_comment='If it"s not a company, then it"s a candidate', null=True)),
                ('invitation_created_at', models.DateTimeField(auto_now_add=True)),
                ('association', models.ForeignKey(db_comment='Association that created the invite', on_delete=django.db.models.deletion.DO_NOTHING, to='api.associations')),
            ],
            options={
                'db_table': 'invitation',
            },
        ),
        migrations.CreateModel(
            name='Initiatives',
            fields=[
                ('initiative_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(verbose_name=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('initiative_url', models.CharField(blank=True, null=True)),
                ('association', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.associations')),
            ],
            options={
                'db_table': 'initiatives',
            },
        ),
        migrations.CreateModel(
            name='DesiredWorkLocationCandidate',
            fields=[
                ('desired_work_location_candidate_id', models.AutoField(primary_key=True, serialize=False)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.candidates')),
                ('canton', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.cantons')),
            ],
            options={
                'db_table': 'desired_work_location_candidate',
            },
        ),
        migrations.CreateModel(
            name='CompanyUsers',
            fields=[
                ('company_user_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_user_designation', models.CharField(blank=True, null=True)),
                ('company_user_first_name', models.CharField(blank=True, null=True)),
                ('company_user_last_name', models.CharField(blank=True, null=True)),
                ('company_preferred_name', models.CharField(blank=True, null=True)),
                ('company_user_email', models.CharField(blank=True, null=True)),
                ('company_user_phone_number_region', models.IntegerField(blank=True, null=True)),
                ('company_user_phone_number', models.IntegerField(blank=True, null=True)),
                ('avatart_url', models.CharField(blank=True, null=True)),
                ('company_user_role', models.IntegerField(blank=True, db_comment='Is there a need for RBAC?', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subsidiary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.subsidiaries')),
            ],
            options={
                'db_table': 'company_users',
            },
        ),
        migrations.CreateModel(
            name='CanditatesInitiatives',
            fields=[
                ('canditates_initiatives_id', models.AutoField(primary_key=True, serialize=False)),
                ('approved', models.BooleanField(blank=True, null=True)),
                ('requested', models.BooleanField(blank=True, null=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.candidates')),
                ('initiative', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.initiatives')),
            ],
            options={
                'db_table': 'canditates_initiatives',
            },
        ),
        migrations.CreateModel(
            name='CandidatesLanguage',
            fields=[
                ('candidate_language_id', models.AutoField(primary_key=True, serialize=False)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.candidates')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.languages')),
                ('language_proficiency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.languagesproficiency')),
            ],
            options={
                'db_table': 'candidates_language',
            },
        ),
        migrations.CreateModel(
            name='CandidatesDocuments',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_name', models.FileField(upload_to='candidates_documents/')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('candidate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.candidates')),
            ],
            options={
                'db_table': 'candidates_documents',
            },
        ),
        migrations.CreateModel(
            name='CandidatesAssociations',
            fields=[
                ('candidate_association_id', models.AutoField(primary_key=True, serialize=False)),
                ('assiciation_comment', models.TextField(blank=True, null=True)),
                ('association', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.associations')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.candidates')),
            ],
            options={
                'db_table': 'candidates_associations',
            },
        ),
        migrations.AddField(
            model_name='candidates',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.countries'),
        ),
        migrations.AddField(
            model_name='candidates',
            name='invited_by',
            field=models.ForeignKey(db_column='invited_by', db_comment='association id', on_delete=django.db.models.deletion.DO_NOTHING, to='api.associations'),
        ),
        migrations.AddField(
            model_name='candidates',
            name='preferred_work_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.workmodels'),
        ),
        migrations.AddField(
            model_name='candidates',
            name='status',
            field=models.ForeignKey(blank=True, db_comment='looking for a job, open to oferings, etc', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.status'),
        ),
        migrations.AddField(
            model_name='candidates',
            name='work_permit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.workpermits'),
        ),
        migrations.CreateModel(
            name='CadidatesSoftSkills',
            fields=[
                ('candidate_soft_skill_id', models.AutoField(primary_key=True, serialize=False)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.candidates')),
                ('soft_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.softskills')),
            ],
            options={
                'db_table': 'cadidates_soft_skills',
            },
        ),
        migrations.CreateModel(
            name='CadidatesSkills',
            fields=[
                ('candidate_skill_id', models.AutoField(primary_key=True, serialize=False)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.candidates')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.skills')),
            ],
            options={
                'db_table': 'cadidates_skills',
            },
        ),
        migrations.CreateModel(
            name='AssociationUsers',
            fields=[
                ('association_user_id', models.AutoField(primary_key=True, serialize=False)),
                ('association_user_designation', models.CharField(blank=True, null=True)),
                ('association_user_first_name', models.CharField(blank=True, null=True)),
                ('association_user_last_name', models.CharField(blank=True, null=True)),
                ('association_user_preferred_name', models.CharField(blank=True, null=True)),
                ('association_user_email', models.CharField(blank=True, null=True)),
                ('association_user_phone_number_region', models.IntegerField(blank=True, null=True)),
                ('association_user_phone_number', models.IntegerField(blank=True, null=True)),
                ('association_user_role', models.IntegerField(blank=True, db_comment='Is there a need for RBAC?', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('association', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.associations')),
            ],
            options={
                'db_table': 'association_users',
            },
        ),
    ]
